name: Build and deploy in dev EKS

on:
  push:
    branches: [ dev ]
  # Allows you to run this workflow manually from the Actions tab workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    #runs-on: [self-hosted, deveks]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::test_accountno:role/dev-jeeta70-github-role
          aws-region: test_version

      - name: Create ECR repository
        id: ECR
        run: |
            aws ecr describe-repositories --region test_version --repository-names ${{ github.event.repository.name }} || aws ecr create-repository --region test_version --repository-name ${{ github.event.repository.name }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set Environment variables
        id: prep
        env:
          EKS_CLUSTER: dev-jeeta70-eks-cluster
          GIT_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo ::set-output name=ECR_REGISTRY::${{ steps.login-ecr.outputs.registry }}
          echo ::set-output name=ECR_REPOSITORY::${{ github.event.repository.name }}
          echo ::set-output name=IMAGE_TAG::${{ github.ref_name }}
          echo ::set-output name=IMAGE_VERSION::${{ github.run_number }}
          echo ::set-output name=CLUSTER::${{ env.EKS_CLUSTER }}
          echo ::set-output name=GIT_TOKEN::${{ env.GIT_TOKEN }}
      
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.prep.outputs.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ steps.prep.outputs.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ steps.prep.outputs.IMAGE_TAG }}
          CLUSTER: ${{ steps.prep.outputs.CLUSTER }}
          IMAGE_VERSION: ${{ steps.prep.outputs.IMAGE_VERSION }}
        run: | 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-$IMAGE_VERSION .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-$IMAGE_VERSION
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-$IMAGE_VERSION"

  deploy:
    #runs-on: [self-hosted, deveks]
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set Environment variables
        id: prep
        env:
          GIT_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo ::set-output name=ECR_REGISTRY::${{ steps.login-ecr.outputs.registry }}
          echo ::set-output name=ECR_REPOSITORY::${{ github.event.repository.name }}
          echo ::set-output name=IMAGE_TAG::${{ github.ref_name }}
          echo ::set-output name=IMAGE_VERSION::${{ github.run_number }}
          echo ::set-output name=CLUSTER::${{ env.EKS_CLUSTER }}
          echo ::set-output name=GIT_TOKEN::${{ env.GIT_TOKEN }}
      - name: Adding service configs repo
        uses: actions/checkout@v2
        with:
          repository: 'jeeta70/test_service_config_repo'
          token: '${{ secrets.GH_TOKEN }}'
          path: test_service_config_repo
          ref: test_config_branch
      - name: deploy to dev EKS cluster
        env:
          ECR_REGISTRY: ${{ steps.prep.outputs.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ steps.prep.outputs.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ steps.prep.outputs.IMAGE_TAG }}
          IMAGE_VERSION: ${{ steps.prep.outputs.IMAGE_VERSION }}
          CLUSTER: ${{ steps.prep.outputs.CLUSTER }}
          GIT_TOKEN: ${{ steps.prep.outputs.GIT_TOKEN }}
        run: |
          cd test_service_config_repo
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq
          yq --version
          IMAGE=$IMAGE_TAG-$IMAGE_VERSION yq -i '.image.tag=strenv(IMAGE)' ${{ steps.prep.outputs.ECR_REPOSITORY }}/values.yaml
          cat ${{ steps.prep.outputs.ECR_REPOSITORY }}/values.yaml
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Updating jeeta70 values.yaml with image tag: ${{ steps.prep.outputs.IMAGE_TAG }}-${{ steps.prep.outputs.IMAGE_VERSION }}"
          create_branch: true
          branch: test_config_branch
          repository: ./test_service_config_repo